// Code generated by "stringer -type CommandKind --output zz_command_kind_string.go"; DO NOT EDIT.

package build

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[CMDTypeOp-1]
	_ = x[CMDTypeTarget-2]
	_ = x[CMDTypeBuff-3]
	_ = x[CMDTypeDebuff-4]
	_ = x[CMDTypeRaidEvent-5]
	_ = x[CMDTypeTalent-6]
	_ = x[CMDTypeGCD-7]
	_ = x[CMDTypeCooldown-8]
	_ = x[CMDTypeTrinket-9]
	_ = x[CMDTypeDot-10]
	_ = x[CMDTypeEquipped-11]
	_ = x[CMDTypeMovement-12]
	_ = x[CMDTypeBuiltin-13]
	_ = x[CMDTypeVariable-14]
	_ = x[CMDTypeBase-15]
}

const _CommandKind_name = "CMDTypeOpCMDTypeTargetCMDTypeBuffCMDTypeDebuffCMDTypeRaidEventCMDTypeTalentCMDTypeGCDCMDTypeCooldownCMDTypeTrinketCMDTypeDotCMDTypeEquippedCMDTypeMovementCMDTypeBuiltinCMDTypeVariableCMDTypeBase"

var _CommandKind_index = [...]uint8{0, 9, 22, 33, 46, 62, 75, 85, 100, 114, 124, 139, 154, 168, 183, 194}

func (i CommandKind) String() string {
	i -= 1
	if i >= CommandKind(len(_CommandKind_index)-1) {
		return "CommandKind(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _CommandKind_name[_CommandKind_index[i]:_CommandKind_index[i+1]]
}
