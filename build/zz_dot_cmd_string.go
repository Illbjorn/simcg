// Code generated by "stringer -type DOTCMD --output zz_dot_cmd_string.go"; DO NOT EDIT.

package build

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DotDuration-1]
	_ = x[DotUp-2]
	_ = x[DotDown-3]
	_ = x[DotRemainsExpected-4]
	_ = x[DotModifier-5]
	_ = x[DotRemains-6]
	_ = x[DotRefreshable-7]
	_ = x[DotTicking-8]
	_ = x[DotTicksAdded-9]
	_ = x[DotTickDmg-10]
	_ = x[DotTicksRemain-11]
	_ = x[DotSpellPower-12]
	_ = x[DotAttackPower-13]
	_ = x[DotMultiplier-14]
	_ = x[DotHastePct-15]
	_ = x[DotCurrentTicks-16]
	_ = x[DotTicks-17]
	_ = x[DotCritPct-18]
	_ = x[DotCritDmg-19]
	_ = x[DotTickTimeRemains-20]
}

const _DOTCMD_name = "DotDurationDotUpDotDownDotRemainsExpectedDotModifierDotRemainsDotRefreshableDotTickingDotTicksAddedDotTickDmgDotTicksRemainDotSpellPowerDotAttackPowerDotMultiplierDotHastePctDotCurrentTicksDotTicksDotCritPctDotCritDmgDotTickTimeRemains"

var _DOTCMD_index = [...]uint8{0, 11, 16, 23, 41, 52, 62, 76, 86, 99, 109, 123, 136, 150, 163, 174, 189, 197, 207, 217, 235}

func (i DOTCMD) String() string {
	i -= 1
	if i >= DOTCMD(len(_DOTCMD_index)-1) {
		return "DOTCMD(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _DOTCMD_name[_DOTCMD_index[i]:_DOTCMD_index[i+1]]
}
